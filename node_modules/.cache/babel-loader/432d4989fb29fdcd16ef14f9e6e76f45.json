{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silvan.biewald\\\\Desktop\\\\Web Programmierung\\\\cocktail-app\\\\src\\\\components\\\\home\\\\home_full.jsx\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\nclass Ingredient_selection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredients: [],\n      buy: false,\n      ingredient_list: {\n        \"Campari\": false,\n        \"Sweet Vermouth\": false,\n        \"Gin\": false,\n        \"Tonic\": false,\n        \"Vodka\": false,\n        \"Dry Vermouth\": false,\n        \"Bourbon\": false,\n        \"Bitters\": false,\n        \"Rum\": false,\n        \"Lime Juice\": false,\n        \"Sugar\": false\n      }\n    };\n  }\n\n  onChangeIngreds(e) {\n    // current array of ingredients\n    const ingredients = this.state.ingredients;\n    let index; // check if the check box is checked or unchecked\n\n    if (e.target.checked) {\n      // add the numerical value of the checkbox to ingredients array\n      ingredients.push(+e.target.value);\n    } else {\n      // or remove the value from the unchecked checkbox from the array\n      index = ingredients.indexOf(+e.target.value);\n      ingredients.splice(index, 1);\n    } // update the state with the new array of ingredients\n\n\n    this.setState({\n      ingredients: ingredients\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Ingredient Selection\"), React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      component: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Choose your Ingredients\"), Object.keys(this.state.ingredient_list).map(function (key, index) {\n      return React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          onChange: this.onChangeIngreds.bind(this),\n          value: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }),\n        label: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }, this)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Do you want to buy the ingredients?\"), React.createElement(FormControl, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Select, {\n      native: true,\n      onChange: handleChangeBuy => {\n        this.setState({\n          buy: handleChangeBuy.target.value\n        });\n      },\n      autoWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Yes\"), React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"No\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: {\n        pathname: '/matching_recipes/matching_recipes_full',\n        state: {\n          ingredients: this.state.ingredients,\n          buy: this.state.buy\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Submit \"))));\n  }\n\n}\n\nexport default Ingredient_selection;\n/*    handleChangeIngreds = (key, value) => {\r\n        let temp = this.state;\r\n        temp.ingredients[key] = !temp.ingredients[key];\r\n        this.setState(temp)\r\n    };\r\n\r\n    state = {\r\n        buy: false,\r\n        ingredients:{\r\n            \"Campari\": false,\r\n            \"Sweet Vermouth\": false,\r\n            \"Gin\": false,\r\n            \"Tonic\": false,\r\n            \"Vodka\": false,\r\n            \"Dry Vermouth\": false,\r\n            \"Bourbon\": false,\r\n            \"Bitters\": false,\r\n            \"Rum\": false,\r\n            \"Lime Juice\": false,\r\n            \"Sugar\": false,\r\n            \"Ginger Beer\": false, \r\n            \"Cognac\": false,\r\n            \"Orange Liqueur\": false,\r\n            \"Tequila\": false,\r\n            \"Champagne\": false,\r\n    }\r\n    }\r\n*/","map":{"version":3,"sources":["C:/Users/silvan.biewald/Desktop/Web Programmierung/cocktail-app/src/components/home/home_full.jsx"],"names":["React","Component","Button","Link","FormLabel","FormControl","FormControlLabel","Checkbox","InputLabel","Select","Ingredient_selection","constructor","state","ingredients","buy","ingredient_list","onChangeIngreds","e","index","target","checked","push","value","indexOf","splice","setState","render","Object","keys","map","key","bind","handleChangeBuy","pathname"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass Ingredient_selection extends Component{\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          ingredients: [],\r\n          buy: false,\r\n        ingredient_list:{\r\n            \"Campari\": false,\r\n            \"Sweet Vermouth\": false,\r\n            \"Gin\": false,\r\n            \"Tonic\": false,\r\n            \"Vodka\": false,\r\n            \"Dry Vermouth\": false,\r\n            \"Bourbon\": false,\r\n            \"Bitters\": false,\r\n            \"Rum\": false,\r\n            \"Lime Juice\": false,\r\n            \"Sugar\": false,\r\n        }\r\n        }\r\n      }\r\n    \r\n      onChangeIngreds(e) {\r\n        // current array of ingredients\r\n        const ingredients = this.state.ingredients\r\n        let index\r\n    \r\n        // check if the check box is checked or unchecked\r\n        if (e.target.checked) {\r\n          // add the numerical value of the checkbox to ingredients array\r\n          ingredients.push(+e.target.value)\r\n        } else {\r\n          // or remove the value from the unchecked checkbox from the array\r\n          index = ingredients.indexOf(+e.target.value)\r\n          ingredients.splice(index, 1)\r\n        }\r\n    \r\n        // update the state with the new array of ingredients\r\n        this.setState({ ingredients: ingredients })\r\n      }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                    <h1>Ingredient Selection</h1>             \r\n            <body>\r\n        <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Choose your Ingredients</FormLabel>\r\n            {Object.keys(this.state.ingredient_list).map(function (key, index) {\r\n                return <FormControlLabel\r\n                control={<Checkbox onChange={this.onChangeIngreds.bind(this)} value={key} />}\r\n                label={key}/>\r\n            }, this)}\r\n        </FormControl>\r\n            <p>Do you want to buy the ingredients?</p>\r\n            <FormControl variant=\"outlined\">\r\n            <InputLabel>\r\n            </InputLabel>\r\n            <Select\r\n                native\r\n                onChange={handleChangeBuy => {this.setState({buy: handleChangeBuy.target.value})}}\r\n                autoWidth>\r\n                <option value=\"\"/>\r\n                <option value= {true} >Yes</option>\r\n                <option value= {false} >No</option>\r\n            </Select>\r\n            </FormControl>\r\n            <br/>\r\n            <Link to={{\r\n                        pathname: '/matching_recipes/matching_recipes_full',\r\n                        state: {\r\n                            ingredients: this.state.ingredients,\r\n                            buy: this.state.buy\r\n                        }}}\r\n                    ><Button variant=\"contained\" color=\"primary\">Submit </Button></Link>\r\n\r\n            </body>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ingredient_selection;\r\n\r\n\r\n\r\n/*    handleChangeIngreds = (key, value) => {\r\n        let temp = this.state;\r\n        temp.ingredients[key] = !temp.ingredients[key];\r\n        this.setState(temp)\r\n    };\r\n\r\n    state = {\r\n        buy: false,\r\n        ingredients:{\r\n            \"Campari\": false,\r\n            \"Sweet Vermouth\": false,\r\n            \"Gin\": false,\r\n            \"Tonic\": false,\r\n            \"Vodka\": false,\r\n            \"Dry Vermouth\": false,\r\n            \"Bourbon\": false,\r\n            \"Bitters\": false,\r\n            \"Rum\": false,\r\n            \"Lime Juice\": false,\r\n            \"Sugar\": false,\r\n            \"Ginger Beer\": false, \r\n            \"Cognac\": false,\r\n            \"Orange Liqueur\": false,\r\n            \"Tequila\": false,\r\n            \"Champagne\": false,\r\n    }\r\n    }\r\n*/"]},"metadata":{},"sourceType":"module"}