{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silvan.biewald\\\\Desktop\\\\Web Programmierung\\\\cocktail-app\\\\src\\\\components\\\\Ingredient_Selection\\\\ingredient_selection_full.jsx\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select'; //Main page where user inputs ingredients and buying wish\n\nclass Ingredient_selection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredients: [],\n      buy: false,\n      ingredient_list: {\n        \"Campari\": false,\n        \"Sweet Vermouth\": false,\n        \"Gin\": false,\n        \"Tonic\": false,\n        \"Vodka\": false,\n        \"Dry Vermouth\": false,\n        \"Bourbon\": false,\n        \"Bitters\": false,\n        \"Rum\": false,\n        \"Lime Juice\": false,\n        \"Sugar\": false\n      }\n    };\n  }\n\n  onChangeIngreds(e) {\n    // current array of ingredients\n    const ingredients = this.state.ingredients;\n    let index; // check if the check box is checked or unchecked\n\n    if (e.target.checked) {\n      // add the numerical value of the checkbox to ingredients array\n      ingredients.push(+e.target.value);\n    } else {\n      // or remove the value from the unchecked checkbox from the array\n      index = ingredients.indexOf(+e.target.value);\n      ingredients.splice(index, 1);\n    } // update the state with the new array of ingredients\n\n\n    this.setState({\n      ingredients: ingredients\n    });\n  }\n\n  render() {\n    return (//iterate through ingredient list in state and display names\n      //below added button to choose buying wish\n      //submit button at the bottom to take given inputs and navigate to matching recipes\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Ingredient Selection\"), React.createElement(\"body\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Choose your Ingredients\"), Object.keys(this.state.ingredient_list).map(function (key, index) {\n        return React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            onChange: this.onChangeIngreds.bind(this),\n            value: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }),\n          label: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }, this)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Do you want to buy the ingredients?\"), React.createElement(FormControl, {\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Select, {\n        native: true,\n        onChange: handleChangeBuy => {\n          this.setState({\n            buy: handleChangeBuy.target.value\n          });\n        },\n        autoWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(\"option\", {\n        value: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: {\n          pathname: '/matching_recipes/matching_recipes_full',\n          state: {\n            ingredients: this.state.ingredients,\n            buy: this.state.buy\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Submit \"))))\n    );\n  }\n\n}\n\nexport default Ingredient_selection;","map":{"version":3,"sources":["C:/Users/silvan.biewald/Desktop/Web Programmierung/cocktail-app/src/components/Ingredient_Selection/ingredient_selection_full.jsx"],"names":["React","Component","Button","Link","FormLabel","FormControl","FormControlLabel","Checkbox","InputLabel","Select","Ingredient_selection","constructor","state","ingredients","buy","ingredient_list","onChangeIngreds","e","index","target","checked","push","value","indexOf","splice","setState","render","Object","keys","map","key","bind","handleChangeBuy","pathname"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n//Main page where user inputs ingredients and buying wish\r\nclass Ingredient_selection extends Component{\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          ingredients: [],\r\n          buy: false,\r\n        ingredient_list:{\r\n            \"Campari\": false,\r\n            \"Sweet Vermouth\": false,\r\n            \"Gin\": false,\r\n            \"Tonic\": false,\r\n            \"Vodka\": false,\r\n            \"Dry Vermouth\": false,\r\n            \"Bourbon\": false,\r\n            \"Bitters\": false,\r\n            \"Rum\": false,\r\n            \"Lime Juice\": false,\r\n            \"Sugar\": false,\r\n        }\r\n        }\r\n      }\r\n    \r\n      onChangeIngreds(e) {\r\n        // current array of ingredients\r\n        const ingredients = this.state.ingredients\r\n        let index\r\n    \r\n        // check if the check box is checked or unchecked\r\n        if (e.target.checked) {\r\n          // add the numerical value of the checkbox to ingredients array\r\n          ingredients.push(+e.target.value)\r\n        } else {\r\n          // or remove the value from the unchecked checkbox from the array\r\n          index = ingredients.indexOf(+e.target.value)\r\n          ingredients.splice(index, 1)\r\n        }\r\n    \r\n        // update the state with the new array of ingredients\r\n        this.setState({ ingredients: ingredients })\r\n      }\r\n\r\n    render(){\r\n\r\n        return(\r\n            //iterate through ingredient list in state and display names\r\n            //below added button to choose buying wish\r\n            //submit button at the bottom to take given inputs and navigate to matching recipes\r\n            <div>\r\n                    <h1>Ingredient Selection</h1>             \r\n            <body>\r\n        <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Choose your Ingredients</FormLabel>\r\n            {Object.keys(this.state.ingredient_list).map(function (key, index) {\r\n                return <FormControlLabel\r\n                control={<Checkbox onChange={this.onChangeIngreds.bind(this)} value={key} />}\r\n                label={key}/>\r\n            }, this)}\r\n        </FormControl>\r\n            <p>Do you want to buy the ingredients?</p>\r\n            <FormControl variant=\"outlined\">\r\n            <InputLabel>\r\n            </InputLabel>\r\n            <Select\r\n                native\r\n                onChange={handleChangeBuy => {this.setState({buy: handleChangeBuy.target.value})}}\r\n                autoWidth>\r\n                <option value=\"\"/>\r\n                <option value= {true} >Yes</option>\r\n                <option value= {false} >No</option>\r\n            </Select>\r\n            </FormControl>\r\n            <br/>\r\n            <Link to={{\r\n                        pathname: '/matching_recipes/matching_recipes_full',\r\n                        state: {\r\n                            ingredients: this.state.ingredients,\r\n                            buy: this.state.buy\r\n                        }}}\r\n                    ><Button variant=\"contained\" color=\"primary\">Submit </Button></Link>\r\n\r\n            </body>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ingredient_selection;\r\n"]},"metadata":{},"sourceType":"module"}